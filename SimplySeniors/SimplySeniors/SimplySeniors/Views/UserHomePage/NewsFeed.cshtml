@model IEnumerable<SimplySeniors.Models.NewsAPI>

@{
    ViewBag.Title = "NewsFeed";
}

<h2 id="eventTitle">News Feed</h2>
<a href="https://newsapi.org/">Powered by News API</a>
<br />

<input class="form-control valid" type="text" id="myInput" onkeyup="searchfunction()" placeholder="Search for news articles.." title="Type in a name">
<select class="form-control valid" id="dropdown">
    <option value="article">Name of Article</option>
    <option value="author">Author</option>
    <option value="date">Date/Time</option>
</select>


<div id="container">
    @foreach (var item in Model)
    {
        <div class="Post" id="individualPost">
            <img href=@Html.DisplayFor(modelItem => item.URLImage)>
            <div id="statusName">@Html.DisplayFor(modelItem => item.SourceName)</div>
            <div class="author" id="statusName">@Html.DisplayFor(modelItem => item.Author)</div>
            <hr />
            <a class="article" href="@Html.DisplayFor(modelItem => item.URL)" id="statusTitle">@Html.DisplayFor(modelItem => item.Title)</a>
            <div id="postDescription">
                @Html.DisplayFor(modelItem => item.Description)
            </div>
            <div class="date">@Html.DisplayFor(modelItem => item.PublishTime)</div>
        </div>
    }
</div>
<script>
    function searchfunction() {
        var input, filter, li, a, i, txtValue, post, postslist, dropdown, DropDownValue;
        dropdown = document.getElementById("dropdown");
        DropDownValue = dropdown.options[dropdown.selectedIndex].value;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        postslist = document.getElementById("container");
        console.log(DropDownValue);
        post = postslist.getElementsByClassName("Post");
        if (DropDownValue == "article") {
            for (i = 0; i < post.length; i++) {
                a = post[i].getElementsByTagName("a")[0];
                txtValue = a.textContent || a.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    post[i].style.display = "";
                } else {
                    post[i].style.display = "none";
                }
            }
        }
        else {
            for (i = 0; i < post.length; i++) {
                a = post[i].getElementsByClassName(DropDownValue)[0];
                console.log(a);
                txtValue = a.textContent || a.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    post[i].style.display = "";
                } else {
                    post[i].style.display = "none";
                }
            }
        }
    }
</script>

@*<table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.SourceName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.URL)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.URLImage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublishTime)
            </th>
        </tr>

        @foreach (var item in Model)
        {

        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.SourceName)
            </td>
            <th>
                @Html.DisplayFor(modelItem => item.Author)
            </th>
            <td>
                <a href=@Html.DisplayFor(modelItem => item.URL)> @Html.DisplayFor(modelItem => item.Title)</a>

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <a href=@Html.DisplayFor(modelItem => item.URL)></a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.URLImage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PublishTime)
            </td>
        </tr>
        }
    </table>
*@

<p>
    @Html.ActionLink("Return to Home", "HomePage", null, new { id = "eventButton" })
</p>

<div id="helpLink"><p> Need help learning about all of the features on the News page? Visit our <b>Help</b> tab on the navigation menu at the top of this page or <a href='/Home/HelpPage#NewsHelp'> Click here</a>.</p></div>
